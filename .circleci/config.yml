# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2
jobs:
  build:
    docker:
      # primary container
      - image: ansingh7115/avram

      # database container
      - image: circleci/postgres:9.6-alpine-ram
        environment:
          POSTGRES_USER: avram
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      APPENGINE_SDK_HOME: /home/gcloud/appengine-java-sdk-1.9.64
      TERM: dumb

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: cd db && ./run-liquibase.sh

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project/Dependencies.scala" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: cat /dev/null | ls ~/.ivy2/cache && rm -rf ~/.ivy2/cache && sbt clean compile test:compile

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "project/Dependencies.scala" }}

      # run tests!
      - run: cat /dev/null | sbt test:test